{
  "name": "file-builder",
  "version": "0.1.0",
  "description": "A concatenation tool ripped from the insides of PrePros.",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha --recursive test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/fatso83/node-file-builder.git"
  },
  "keywords": [
    "codekit",
    "javascript",
    "prepend",
    "append",
    "prepros",
    "hammer",
    "concatenate",
    "topological"
  ],
  "author": {
    "name": "Carl-Erik Kopseng"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/fatso83/node-file-builder/issues"
  },
  "homepage": "https://github.com/fatso83/node-file-builder",
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.20.1"
  },
  "dependencies": {
    "backbone": "^1.1.2",
    "fs-extra": "^0.9.1",
    "lodash": "^2.4.1",
    "md5": "^1.0.0",
    "requirejs": "^2.1.14",
    "uglify-js": "^2.4.13"
  },
  "readme": "node-file-builder\n=================\n> A file builder ripped from the insides of PrePros\n\n# Why?\nConcatenate files with prepend and append directives embedded in the files as is possible in PrePros and CodeKit.\nThis tool was made to serve the needs of\n[grunt-codekit](https://github.com/fatso83/grunt-codekit), but is published in\nthe hopes that it meets the needs of other souls out there.\n\n# Getting started\n\n```\nvar builder = require('file-builder')\n            , fileOptions = {\n                input: 'starting-point.js',\n                customOutput: '../results/output.js'\n            }\n            , projectOptions = { path: '.' };\n\nbuilder.javascript(fileOptions, projectOptions, callback);\n```\n\nAssuming we are working with the files in the\n[test/fixtures](https://github.com/fatso83/node-file-builder/tree/master/test/fixtures)\ndirectory you will end up with\n[test/results/output.js](https://github.com/fatso83/node-file-builder/tree/master/test/results/output.js)\n\n# API notes\nWe are just working directly with the innards of Prepros, so if you want\nto know about *all* the different overrides you can look into the `config`\nmodule of PrePros.\n\n## Javascript \n\n### Appending \nUse single line comments with `@codekit-append` or `@prepros-append`  \nExample: `// @codekit-append 'myfile.js'`\n\n### Prepending\n\nSee *Appending* - substitute keywords for `@codekit-prepend`, `@prepros-prepend`\n\n### API\n\n`javascript(fileOptions, projectOptions, callback)`\n\n- *fileOptions.input* (compulsory) name of input file\n- fileOptions.config.customOutput Filename of specific outputfile\n- fileOptions.config.uglify\n- fileOptions.config.sourcemaps\n- fileOptions.config.mangle\n- *projectOptions.path* (compulsory) must be set to .\n- callback if the first argument is non-null, an error has occurred. Second argument is name of the input file\n\n## Ruby, SASS, ... \n\nWe are embedding the core of PrePros, so one could do a lot more, but the goal for the first version was to expose the javascript functionality. Feel free to push a PR.\n\n# Notes\n\nThere are some more newlines than what one might expect, but this is\nhow Prepros does this, and so any issues with that should be filed\nin the Prepros project.\n\n# About\nThe actual file concatenation logic has been ripped from the insides\nof PrePros, so thanks to [Subash Pratakh](http://github.com/subash)  for releasing those parts under the MIT\nlicense.\n\n# Problems? Pull requests?\nFile an issue if there are problems. Pull requests are very welcome.\n",
  "readmeFilename": "README.md",
  "_id": "file-builder@0.1.0",
  "_from": "file-builder@^0.1.0"
}
